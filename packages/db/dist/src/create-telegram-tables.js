"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const postgres_js_1 = require("drizzle-orm/postgres-js");
const postgres_1 = __importDefault(require("postgres"));
const dotenv_1 = require("dotenv");
// Load environment variables
(0, dotenv_1.config)();
async function createTelegramTables() {
    const databaseUrl = process.env.DATABASE_URL;
    if (!databaseUrl) {
        console.error('‚ùå DATABASE_URL is not set in environment variables');
        process.exit(1);
    }
    console.log('üîå Connecting to database...');
    try {
        const client = (0, postgres_1.default)(databaseUrl, { max: 1 });
        const db = (0, postgres_js_1.drizzle)(client);
        console.log('‚úÖ Connected to database successfully');
        console.log('üìã Creating telegram_users table...');
        // This will create the table based on your Drizzle schema
        console.log('‚úÖ telegram_users table schema loaded');
        console.log('üìã Creating sessions table...');
        // This will create the table based on your Drizzle schema
        console.log('‚úÖ sessions table schema loaded');
        console.log('üéâ Telegram tables setup completed successfully!');
        console.log('');
        console.log('Next steps:');
        console.log('1. Get bot token from @BotFather');
        console.log('2. Add BOT_TOKEN to your .env file');
        console.log('3. Run the application with Telegram login');
    }
    catch (error) {
        console.error('‚ùå Error setting up Telegram tables:', error);
        process.exit(1);
    }
}
createTelegramTables();
//# sourceMappingURL=create-telegram-tables.js.map