'use client'

import { useState, useMemo, useEffect, memo } from 'react'
import CollapsibleBlock from '../shared/collapsible-block'
import MapWithPreview from '../shared/map-with-preview'
import NearbyAdsFilter from '../shared/nearby-ads-filter'
import type { NearbyAdsBlockProps } from '../types/ads-blocks.types'
import type { FlatFilters } from '../hooks/use-map-ads-filter'

/**
 * Block component for nearby ads within 500m radius
 */
const NearbyAdsBlock = memo(function NearbyAdsBlock({
  flat,
  nearbyAds,
  nearbyFilters,
  flatAds = [],
  isCollapsed,
  onToggleCollapse,
  onRefetch,
  isLoading,
  onAddToComparison,
  onToggleComparison,
  comparisonAds,
  onSearchWithFilters,
}: NearbyAdsBlockProps) {
  // –ù–∞—Ö–æ–¥–∏–º –∞–∫—Ç–∏–≤–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω–æ–π –¥–ª—è –±–∞–∑–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –ø–ª–æ—â–∞–¥–µ–π
  const getBaseAreaValues = () => {
    const activeAdsWithAreas = flatAds.filter(
      (ad) =>
        (ad.status === true || ad.status === 1) &&
        ad.totalArea &&
        ad.kitchenArea,
    )

    if (activeAdsWithAreas.length === 0) {
      return { minArea: undefined, minKitchenArea: undefined }
    }

    // –ù–∞—Ö–æ–¥–∏–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω–æ–π —Å—Ä–µ–¥–∏ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π —Å –ø–ª–æ—â–∞–¥—è–º–∏
    const minPriceAd = activeAdsWithAreas.reduce((min, current) =>
      current.price && (!min.price || current.price < min.price)
        ? current
        : min,
    )

    return {
      minArea: minPriceAd.totalArea
        ? Math.round(Number(minPriceAd.totalArea) * 0.9 * 10) / 10 // 90% –æ—Ç –ø–ª–æ—â–∞–¥–∏ —Ç–µ–∫—É—â–µ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã
        : undefined,
      minKitchenArea: minPriceAd.kitchenArea
        ? Math.round(Number(minPriceAd.kitchenArea) * 0.9 * 10) / 10 // 90% –æ—Ç –∫—É—Ö–Ω–∏ —Ç–µ–∫—É—â–µ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã
        : undefined,
    }
  }

  // –í—ã—á–∏—Å–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –¢–û–õ–¨–ö–û –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ flatAds
  const [defaultFiltersFromFlatAds, setDefaultFiltersFromFlatAds] = useState<{
    rooms: number
    maxPrice: number
    minArea?: number
    minKitchenArea?: number
  }>(() => ({
    rooms: 3,
    maxPrice: 50000000,
    minArea: undefined,
    minKitchenArea: undefined,
  }))

  // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –¢–û–õ–¨–ö–û –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    if (flatAds.length > 0 && defaultFiltersFromFlatAds.maxPrice === 50000000) {
      // –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–ª–æ—â–∞–¥–µ–π
      const baseAreaValues = getBaseAreaValues()

      // –ü–æ–ª—É—á–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –∏–∑ –æ–±—ä—è–≤–ª–µ–Ω–∏–π —Ç–µ–∫—É—â–µ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã (—Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–Ω—ã–µ, –ø–æ—Ç–æ–º –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ)
      const getMinPriceFromCurrentFlatAds = () => {
        const allAds = flatAds.length
        const activeAds = flatAds.filter(
          (ad) => (ad.status === true || ad.status === 1) && ad.price,
        )
        const inactiveAds = flatAds.filter(
          (ad) => (ad.status === false || ad.status === 0) && ad.price,
        )

        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ, –µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ
        const adsToUse = activeAds.length > 0 ? activeAds : inactiveAds

        if (process.env.NODE_ENV === 'development') {
          const timestamp = new Date().toISOString().slice(11, 23)
          if (activeAds.length > 0) {
            console.log(
              `üí∞ [${timestamp}] Using ACTIVE ads for filters (${activeAds.length} ads)`,
            )
          } else if (inactiveAds.length > 0) {
            console.log(
              `üí∞ [${timestamp}] Using INACTIVE ads for filters (${inactiveAds.length} ads)`,
            )
          }
        }

        if (adsToUse.length === 0) return 50000000 // fallback —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤–æ–æ–±—â–µ –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π

        const minPriceAd = adsToUse.reduce((min, current) =>
          current.price && (!min.price || current.price < min.price)
            ? current
            : min,
        )

        const finalPrice = minPriceAd.price || 50000000

        if (process.env.NODE_ENV === 'development') {
          const timestamp = new Date().toISOString().slice(11, 23)
          console.log(
            `üí∞ [${timestamp}] MIN_PRICE - Selected: ${finalPrice} from ad: ${minPriceAd.url}`,
          )
        }

        return finalPrice
      }

      const newDefaultFilters = {
        rooms: flat.rooms || 3,
        maxPrice: getMinPriceFromCurrentFlatAds(),
        minArea: baseAreaValues.minArea,
        minKitchenArea: baseAreaValues.minKitchenArea,
      }

      setDefaultFiltersFromFlatAds(newDefaultFilters)
    }
  }, [flatAds]) // –ó–∞–≤–∏—Å–∏—Ç —Ç–æ–ª—å–∫–æ –æ—Ç flatAds, –Ω–µ –æ—Ç flat.rooms

  // State for map filters - –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–µ–∫—É—â–µ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã —Å–æ–≥–ª–∞—Å–Ω–æ MAPS.md
  const [mapFilters, setMapFilters] = useState<FlatFilters | null>(null)

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º mapFilters –∫–æ–≥–¥–∞ defaultFilters –≥–æ—Ç–æ–≤—ã
  useEffect(() => {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –¥–∞–∂–µ —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏, —á—Ç–æ–±—ã –∫–∞—Ä—Ç–∞ –≤—Å–µ–≥–¥–∞ –∑–∞–≥—Ä—É–∂–∞–ª–∞—Å—å

    const initialMaxPrice =
      nearbyFilters?.currentPrice ||
      nearbyFilters?.maxPrice ||
      defaultFiltersFromFlatAds.maxPrice

    const newFilters = {
      rooms: nearbyFilters?.rooms || defaultFiltersFromFlatAds.rooms,
      maxPrice: initialMaxPrice,
      minArea: nearbyFilters?.minArea || defaultFiltersFromFlatAds.minArea,
      minKitchenArea:
        nearbyFilters?.minKitchenArea ||
        defaultFiltersFromFlatAds.minKitchenArea,
    }

    setMapFilters((prevFilters) => {
      // –ï—Å–ª–∏ –ø–µ—Ä–≤–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è (prevFilters === null), –ø—Ä–æ—Å—Ç–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
      if (!prevFilters) {
        if (process.env.NODE_ENV === 'development') {
          const timestamp = new Date().toISOString().slice(11, 23)
          console.log(
            `üó∫Ô∏è [${timestamp}] INIT - Map filters initialized:`,
            newFilters,
          )
        }
        return newFilters
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –ª–∏ —Ñ–∏–ª—å—Ç—Ä—ã –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
      const hasChanged =
        prevFilters.rooms !== newFilters.rooms ||
        prevFilters.maxPrice !== newFilters.maxPrice ||
        prevFilters.minArea !== newFilters.minArea ||
        prevFilters.minKitchenArea !== newFilters.minKitchenArea

      if (hasChanged && process.env.NODE_ENV === 'development') {
        const timestamp = new Date().toISOString().slice(11, 23)
        console.log(`üìù [${timestamp}] Updating mapFilters:`, {
          newFilters,
          trigger: nearbyFilters ? 'user_input' : 'update',
        })
      }

      return hasChanged ? newFilters : prevFilters
    })
  }, [defaultFiltersFromFlatAds, nearbyFilters])

  // Handle filter updates from NearbyAdsFilter (—Å–ª—É—á–∞–π 3: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥)
  const handleFilterUpdate = (filters: {
    maxPrice: number
    minArea?: number
    rooms: number
    minKitchenArea?: number
    radius: number
  }) => {
    if (process.env.NODE_ENV === 'development') {
      const timestamp = new Date().toISOString().slice(11, 23)
      console.log(`üî• [${timestamp}] USER INPUT - Filter update:`, filters)
    }

    // Update map filters (excluding radius since map uses bounds)
    const newMapFilters = {
      rooms: filters.rooms,
      maxPrice: filters.maxPrice,
      minArea: filters.minArea,
      minKitchenArea: filters.minKitchenArea,
    }

    setMapFilters(newMapFilters)

    // Call original search callback
    if (onSearchWithFilters) {
      onSearchWithFilters(filters)
    }
  }

  const loadingContent = (
    <div className='flex justify-center items-center py-8'>
      <div className='animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600'></div>
      <span className='ml-2 text-sm text-gray-600'>
        –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Ä—è–¥–æ–º...
      </span>
    </div>
  )

  return (
    <CollapsibleBlock
      title='–û–±—ä—è–≤–ª–µ–Ω–∏—è —Ä—è–¥–æ–º'
      isCollapsed={isCollapsed}
      onToggle={onToggleCollapse}
    >
      {isLoading ? (
        loadingContent
      ) : (
        <>
          {/* –§–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ - —Ç–µ–ø–µ—Ä—å —Å–≤–µ—Ä—Ö—É –∏ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É */}
          {nearbyAds && nearbyAds.length > 0 && nearbyFilters && (
            <div className='mb-4'>
              <NearbyAdsFilter
                currentFilters={{
                  maxPrice:
                    nearbyFilters?.currentPrice ||
                    nearbyFilters?.maxPrice ||
                    defaultFiltersFromFlatAds.maxPrice,
                  rooms: nearbyFilters?.rooms || flat.rooms || 3, // ‚â• –∫–æ–º–Ω–∞—Ç —Ç–µ–∫—É—â–µ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã
                  minArea:
                    nearbyFilters?.minArea || defaultFiltersFromFlatAds.minArea, // 90% –æ—Ç –ø–ª–æ—â–∞–¥–∏ —Ç–µ–∫—É—â–µ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã
                  minKitchenArea:
                    nearbyFilters?.minKitchenArea ||
                    defaultFiltersFromFlatAds.minKitchenArea, // 90% –æ—Ç –∫—É—Ö–Ω–∏ —Ç–µ–∫—É—â–µ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã
                  radius: nearbyFilters?.radius || 500,
                }}
                onSearch={handleFilterUpdate}
                isLoading={isLoading}
                inline={true}
              />
            </div>
          )}

          {/* –ö–∞—Ä—Ç–∞ —Å preview –ø–∞–Ω–µ–ª—å—é –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤ –≤–∏–¥–∏–º–æ–π –æ–±–ª–∞—Å—Ç–∏ */}
          {mapFilters ? (
            <MapWithPreview
              flatId={flat.id.toString()}
              className='w-full'
              externalFilters={mapFilters}
              onAddToComparison={onAddToComparison}
              onToggleComparison={onToggleComparison}
              comparisonAds={comparisonAds}
            />
          ) : (
            <div className='w-full h-[500px] bg-gray-100 animate-pulse rounded-lg flex items-center justify-center'>
              <div className='text-sm text-gray-600'>–ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ä—Ç—ã...</div>
            </div>
          )}
        </>
      )}
    </CollapsibleBlock>
  )
})

export default NearbyAdsBlock
